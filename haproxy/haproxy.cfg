global
  stats socket /var/run/api.sock user haproxy group haproxy mode 660 level admin expose-fd listeners
  log stdout format raw local0 info

defaults
    log global
    mode tcp
    option tcplog
    maxconn 1024000
    timeout connect 30000
    timeout client 600s
    timeout server 600s
    # never fail on address resolution
    default-server init-addr last,libc,none


frontend stats
    mode http
    bind *:8404
    stats enable
    stats uri /stats
    stats refresh 10s
    stats admin if LOCALHOST


frontend HMQ_tcp
   mode tcp
   option tcplog
   bind *:1883
   default_backend MQTTbrokers



backend MQTTbrokers
    mode tcp
    # Create a stick table for session persistence
    stick-table type string len 32 size 100k expire 30m
    # Use ClientID / client_identifier as persistence key
    stick on req.payload(0,0),mqtt_field_value(connect,client_identifier)
    # send proxy-protocol v2 headers
    server HQM1 HMQ-node1:1883 check
    server HQM2 HMQ-node2:1883 check
    server HQM3 HMQ-node3:1883 check

frontend CCfrontend

   # Set the proxy mode to http (layer 7) or tcp (layer 4)
   mode http
   # Receive HTTP traffic on all IP addresses assigned to the server at port 80
   bind *:8080
   # Choose the default pool of backend servers
   default_backend CC_servers

backend CC_servers
   mode http
   server HQM1 HMQ-node1:8080 check
   #server HQM2 HMQ-node2:8080 check
   #server HQM3 HMQ-node3:8080 check

